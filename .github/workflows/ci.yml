name: CI
on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:
  verify_version:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Verify NPM and Rubygem Versions Match
      id: versions
      run: |
        VERSION=$(cat lib/ring/version.rb | awk '/VERSION/{ print $3 }' | tr -d "'")
        echo "::set-output name=version::$VERSION"
    - name: Verify Changelog Entry for Version
      run: |
        cat CHANGELOG.md | grep ${{ steps.versions.outputs.version }}

  create_release:
    needs: verify
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v2
    - name: Get version
      id: version
      run: |
        VERSION=$(cat lib/ring/version.rb | awk '/VERSION/{ print $3 }' | tr -d "'")
        echo "::set-output name=version::$VERSION"
    - name: Check if published release exists
      id: published-release
      run: |
        ID=$(curl --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          https://api.github.com/repos/trobrock/ring/releases | jq '.[] | select(.tag_name == "v${{ steps.version.outputs.version }}" and .draft == false) | .id')
        echo "::set-output name=id::$ID"
    - name: Check if draft release exists
      id: release
      run: |
        ID=$(curl --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          https://api.github.com/repos/trobrock/ring/releases | jq '.[] | select(.tag_name == "v${{ steps.version.outputs.version }}" and .draft) | .id')
        echo "::set-output name=id::$ID"
    - name: Delete previous release
      if: steps.release.outputs.id
      run: |
        curl --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          -X DELETE \
          https://api.github.com/repos/trobrock/ring/releases/${{ steps.release.outputs.id }}
    - name: Get version changes
      if: steps.published-release.outputs.id != 0
      run: |
        awk -v version='[${{ steps.version.outputs.version }}]' '/^## / {printit = $2 == version}; printit;' CHANGELOG.md > RELEASE_CHANGELOG.md
    - uses: actions/create-release@v1
      if: steps.published-release.outputs.id != 0
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: Release ${{ steps.version.outputs.version }}
        body_path: RELEASE_CHANGELOG.md
        draft: true
